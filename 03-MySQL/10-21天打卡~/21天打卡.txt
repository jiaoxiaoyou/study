systemctl start mariadb
第1天
1. 创建数据库
create database if not exists istester;
2. 查看数据表
show databases;


第2天
3. 创建表istester
CREATE TABLE istester(
id INT(10) NOT NULL UNIQUE PRIMARY KEY,
uname VARCHAR(20) NOT NULL,
sex VARCHAR(4),
birth YEAR,
department VARCHAR(20),
address VARCHAR(50),
idoxu VARCHAR(20)
);
4.创建表idoxu
CREATE TABLE idoxu(
id INT(10) NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT,
stu_id INT(10) NOT NULL,
c_name VARCHAR(20),
istester VARCHAR(50),
grade INT(10) 
);


第3天

复制istester表结构，创建新表istester2
CREATE TABLE istester2 LIKE istester;
CREATE TABLE istester3 as SELECT * FROM istester WHERE 1=2;

复制idoxu表结构和数据，创建新表idoxu3
CREATE TABLE idoxu2 as select * from idoxu;
CREATE TABLE idoxu3 as select * from idoxu;

复制idoxu表结构的 id,stu_id,istester三个字段，创建新表idoxu4
CREATE TABLE idoxu4 as SELECT id,stu_id,istester from idoxu where 1<>1;

SHOW TABLES;


第4天

CREATE TABLE idoxu2 as select * from idoxu;

SHOW TABLES;

删除表 istester2
DROP TABLE istester2;

SHOW TABLES;

同时删除表idoxu2和idoxu3
DROP TABLE idoxu2,idoxu3;

查看还有哪些表
SHOW TABLES;


第5天
修改istester表，添加一个字段istester6 （字符类型VARCHAR，长度100，不允许为空）
ALTER TABLE istester ADD istester6 VARCHAR(100) NOT NULL;

查看字段istester6  ，是否添加成功
DESC idoxu;
SHOW COLUMNS FROM istester;

修改istester表，删除字段istester6
ALTER TABLE istester DROP istester6;

SHOW COLUMNS FROM istester;


第6天
SHOW tables;

DESC idoxu;

DESC istester;

INSERT INTO 
istester 
(id,uname,idoxu) 
VALUES 
(1,'idoxu','2020'),
(2,'idoxu2','2020');

INSERT INTO
idoxu 
(id, stu_id, c_name, grade)
VALUES 
(4, 11, 'idoxu', 90),
(5, 12, 'lin', 100),
(6, 33, 'istester', 20);

SELECT * from istester;
SELECT * from idoxu;


第7天打卡

查询istester表 id = 1的内容
SELECT * FROM istester WHERE id = 1;

查询idoxu 表 grade=100 的内容
SELECT * FROM idoxu WHERE grade = 100;


第8天打卡

查找idoxu表，名称（c_name）包含 “i” 的数据
SELECT * FROM idoxu WHERE c_name LIKE '%i%';

查找istester表，id 包含 “1” 的数据
SELECT * FROM istester WHERE id LIKE '%1%';

INSERT INTO istester
(id, uname, idoxu)
VALUES
(11, 'idoxu', '2022'),
(21, 'idoxu21', '2021');

查找istester表，id 包含 “1” 的数据，按id降序
SELECT * FROM istester WHERE id LIKE '%1%' ORDER BY id DESC;

查找istester表，id 包含 “1” 的数据 ，取id最大的三个
SELECT * FROM istester WHERE id LIKE '%1%' ORDER BY id DESC LIMIT 0,3;


第9天打卡

1）找出idoxu表中，分数最高的同学和分数		
SELECT c_name, grade FROM idoxu ORDER BY grade DESC LIMIT 0,1;

2）找出idoxu表中，分数最低的同学和分数
SELECT c_name, grade FROM idoxu ORDER BY grade ASC LIMIT 0,1;


第10天打卡

-- 1) 找出istester表，sex为空的的数据；
select * from istester where sex is null ;

-- 2）更新istester表，sex为空的，设置为0（性别未知）
update istester set sex = 0 where sex is null ;


-- 3）找出idoxu表，grade小于60分的同学
select * from idoxu where grade < 60 ;

-- 4）更新idoxu表，把grade小于60分的同学，一律改为59分
update idoxu set grade = 59 where grade < 60 ;


第11天打卡
-- 1）查找istester表，按id降序
select * from istester order by id desc;

-- 2）查找idoxu表，按grade升序
select * from idoxu order by grade;


第12天打卡
1）查询istester表，有多少行数据
select COUNT(sex) from istester;

2）查询istester表，有性别类型数量（sex字段，去重）
select COUNT(DISTINCT sex) from istester;


第13天打卡
1）查找idoxu表，学生成绩(grade) 总分
select sum(grade) as sumgrade from idoxu ;

2）查找idoxu表，学生成绩(grade) 平均分
select avg(grade) as avggrade from idoxu ;


第14天打卡
-- 1）查找idoxu表，成绩在80 - 100区间的学生 ；
select * from idoxu where grade between 80 and 100;
-- 2）查找istester表，id 为 2，11，12 的数据 ；
select * from istester where id in (2,11,12) ;


第15天打卡
1）删除 istester表，id大于12的数据 ；
delete from istester where id > 12;

2）删除idoxu表，分数grade不及格（小于60分）的数据 ；
delete from idoxu where grade < 60 ;


第16天打卡
造数据 ，把istester表的所有数据，插入到 idoxu表
字段关系
id 取id
stu_id 取id
c_name 取 uname
istester 和 grade字段，给默认值 60

insert into idoxu(id,stu_id,c_name,istester,grade) select id,id,uname,60,60 from istester ;


第17天打卡
-- 1）把idoxu表，改名为 idoxu6
-- ALTER TABLE 旧表名 RENAME TO 新表名 ;
ALTER TABLE idoxu RENAME TO idoxu681 ;

-- 2）检查是否修改成功
show tables;

-- 3）修改表istester，把字段istester ，改为istester6（字符类型varchar，长度160 ）
alter table istester CHANGE istester istester6 varchar(160);

-- 4）检查是否修改成功
desc istester;


第18天打卡
1）创建数据库 istesterdb6
create database istesterdb6 ;

2）检查数据库是否创建成功 ；
show databases ;

3）进入istesterdb6 库
use istesterdb6 ;

4）在数据库 istesterdb6 ，创建idoxu表，直接拷贝 istester库idoxu6表的数据和结构 ；
create table istesterdb6.idoxu as SELECT * from istester.idoxu6;
或
create table idoxu as SELECT * from istester.idoxu6;

5）检查表是否创建成功 ；
show tables;


第19天打卡
-- 1）排名前三的学生 和分数 ； 
SELECT c_name,grade FROM idoxu ORDER BY grade DESC LIMIT 3; 

-- 2）排名3 - 6名的学生 和分数 ； 
SELECT c_name,grade FROM idoxu ORDER BY grade DESC LIMIT 2,4; 

-- 3）排名6名以后的所有学生 和分数 ； 
SELECT c_name,grade FROM idoxu ORDER BY grade DESC LIMIT 5,666;

注：这题目的是limit的用法，很多同学写的太复杂 ；

limit是mysql的语法
select * from table limit m,n
其中m是指记录开始的index，从0开始，表示第一条记录
n是指从第m+1条开始，取n条。
select * from tablename limit 2,4
即取出第3条至第6条，4条记录



第20天打卡
注：主要目的是熟悉这三种玩法，以及观察结果差异 ；

#左连接 
SELECT * from idoxu6 a LEFT JOIN istester b on a.stu_id=b.id; 

#内连接 
SELECT * from idoxu6 a INNER JOIN istester b on a.stu_id=b.id; 

#右连接 
SELECT * from idoxu6 a RIGHT JOIN istester b on a.stu_id=b.id;



第21天打卡
1）把表idoxu6，改名为idoxu 
rename table idoxu6 to idoxu; 
或
alter table idoxu6 rename idoxu; 

2）删除库 istesterdb6 
drop database istesterdb6; 

3）删除istester表 
drop table istester; 

4）清空idoxu表的数据 
truncate table idoxu; 
或
delete from idoxu;




